{"version":3,"sources":["server/tools.js","server/server.js","app.js"],"names":["publicPath","process","env","FrontEnd","path","resolve","__dirname","comingSoonPath","port","PORT","app","use","express","static","tools","req","res","next","get","send","console","log","listen","chalk","white","bgRed","MY_DATABASE_PASSWORD"],"mappings":";AACe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EADf,IAAA,EAAA,EAAA,QAAA,SACe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,IAAA,EAAA,CACbA,WAAU,IACJC,QAAQC,IAAIC,SACPC,EAAKC,QAAAA,QAAQC,UAAW,QAAS,eAEnCF,EAAKC,QAAAA,QAAQC,UAAW,QAAS,eAE1CC,eAAc,IACLH,EAAKC,QAAAA,QAAQC,UAAW,QAAS,oBAR7B,QAAA,QAAA;;AC2Bf,aA3BA,IAAA,EAAA,EAAA,QAAA,YACA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,UAEA,EAAA,EAAA,QAAA,YAuBA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GApBA,MAAME,EAAOP,QAAQC,IAAIO,MAAQ,IAE3BC,GAAM,EAAZ,EAAA,WAOAA,EAAIC,IAAIC,EAAQC,QAAAA,OAAOC,EAAMP,QAAAA,kBAAmB,CAACQ,EAAKC,EAAKC,KACzDA,MAKFP,EAAIQ,IAAI,mBAAoB,CAACH,EAAKC,KAChCA,EAAIG,KAAK,CAAEP,QAAS,oDACpBQ,QAAQC,IAAI,4BAGdX,EAAIY,OAAOd,EAAM,KACfY,QAAQC,IAAIE,EAAMC,QAAAA,MAAMC,gCAAgCjB;;AC3B1D,aAAA,QAAA,kCAAA,QAAA,4CAAA,QAAA,4CAAA,QAAA,4CAAA,QAAA,4CAAA,QAAA,uCAAA,QAAA,6CAAA,QAAA,sCADA,QAAA,iBAGA,QAAA,mBAFAY,QAAQC,kBAAkBpB,QAAQC,IAAIwB","file":"app.map","sourceRoot":"..\\src","sourcesContent":["import path from 'path';\r\nexport default {\r\n  publicPath() {\r\n    if (process.env.FrontEnd) {\r\n      return path.resolve(__dirname, './../', 'public/dist');\r\n    }\r\n    return path.resolve(__dirname, './../', 'public/prod');\r\n  },\r\n  comingSoonPath() {\r\n    return path.resolve(__dirname, './../', 'comingSoon/prod');\r\n  }\r\n};\r\n","// ----- Package Imports ----- //\r\nimport express from 'express';\r\nimport compression from 'compression'\r\nimport chalk from 'chalk';\r\n// ----- File Imports ----- //\r\nimport tools from './tools';\r\n// ----- End Imports ----- //\r\n\r\nconst port = process.env.PORT || 3000;\r\n// console.log(`Port: ${port} `);\r\nconst app = express();\r\n\r\n// mongoose.connect(\"mongodb://srv-captain--mongo-db/mydatabase\", { useMongoClient: true });\r\n// <-------------- compression --------------> //\r\n// app.use(compression())\r\n\r\n\r\napp.use(express.static(tools.comingSoonPath()), (req, res, next) => {\r\n  next()\r\n});\r\n\r\n// app.use(express.static(tools.publicPath()));\r\n\r\napp.get('/express_backend', (req, res) => {\r\n  res.send({ express: 'YOUR EXPRESS BACKEND IS CONNECTED TO REACT!!!!!' });\r\n  console.log('Connection successful!');\r\n});\r\n\r\napp.listen(port, () => {\r\n  console.log(chalk.white.bgRed(`Server started on port ${port} ...`));\r\n});\r\n","import '@babel/polyfill';\r\nimport 'dotenv/config';\r\nconsole.log(`This is my ${process.env.MY_DATABASE_PASSWORD} `);\r\n\r\nimport './server/server';\r\n"]}