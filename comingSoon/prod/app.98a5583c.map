{"version":3,"sources":["js/app.js"],"names":["x","setInterval","countDownDate","distance","Date","getTime","days","Math","floor","hours","minutes","seconds","document","getElementById","textContent","clearInterval","innerHTML"],"mappings":"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","file":"app.98a5583c.map","sourceRoot":"..\\src","sourcesContent":["// Update the count down every 1 second\r\nconst x = setInterval(() => {\r\n  const countDownDate = new Date('Feb 01, 2019 17:00:00').getTime();\r\n\r\n  // Get todays date and time\r\n  const now = new Date().getTime();\r\n\r\n  // Find the distance between now and the count down date\r\n  const distance = countDownDate - now;\r\n  // Time calculations for days, hours, minutes and seconds\r\n  const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n  const hours = Math.floor(\r\n    (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\r\n  );\r\n  const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n  const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n  // Display the result in the elements\r\n  document.getElementById('days').textContent = days;\r\n  document.getElementById('hours').textContent = hours;\r\n  document.getElementById('minutes').textContent = minutes;\r\n  document.getElementById('seconds').textContent = seconds;\r\n\r\n  // If the count down is finished, write some text\r\n  if (distance < 0) {\r\n    clearInterval(x);\r\n    document.getElementById('demo').innerHTML = 'EXPIRED';\r\n  }\r\n}, 1000);\r\n"]}